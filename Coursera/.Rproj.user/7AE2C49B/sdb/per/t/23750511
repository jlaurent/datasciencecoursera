{
    "contents" : "    ############################\n    ##### SCRIPT FINAL PME #####\n    ############################\n\n    \n    \nrm(list = ls () ) # nettoyage memoire de R\n\nrequire(MASS)\nrequire(ggplot2)\nrequire(plyr)\nrequire(dplyr)\nrequire(scales)\nrequire(reshape) # pr fction melt, afin chgt format wide -> long\nrequire(reshape2)\nrequire(FactoMineR)\nrequire(gridExtra)\n# require(gtable) # alternative pour arranger graphes ensembles\nrequire(missMDA)\nrequire(agricolae)\n# require(xtable)\nrequire(gtools)\nrequire(cluster)\n\nsource(\"Scripts/functions.R\")\nsource(\"Scripts/data_cleaning.R\")\n    \n    \n    \n    # Reprendre le script et remplacer dat$ind par dat[,'ind']\n    \n    \n\n    ######################0000000000000########################   \n    \n    \n    #### SOMMAIRE ####\n    \n    \n    \n    ######################0000000000000########################\n    \n    \n#o# scatterplot poids fonction taille + projection marginale des distributions\n    \n    #### pds fction de longueur\n    scatter <- ggplot(BDD_PME, aes(x = ls_mm, y = pds_g)) + \n      geom_point(aes(color = Regime_alter, shape = Regime_principal)) + \n      theme(legend.position = c(1, 1), legend.justification = c(1, 1)) +\n      scale_x_continuous(limits = c(0, 200)) + \n      scale_y_continuous(limits = c(0, 100)) +# 2 Hoplias aimara de presque 2 kg qui entrainent le tassement de la majorite du jeu de donnees\n      guides(shape = FALSE) # Pas de légende pour les formes\n    \n    #marginal density of x - plot on top\n    plot_top <- ggplot(BDD_PME, aes(ls_mm, fill=Regime_alter)) + \n      geom_density(alpha = .5) + \n      scale_x_continuous(limits = c(0, 200)) + # pour apercu plus detaille de la distrib de la majorite des poissons\n      theme(legend.position = \"none\")\n        \n    #marginal density of y - plot on the right\n    plot_right <- ggplot(BDD_PME, aes(pds_g, fill=Regime_alter)) + \n      geom_density(alpha = .5) + \n      scale_x_continuous(limits = c(0, 50)) + # limites d'apres divers essais. poissons tres legers\n      coord_flip() + \n      theme(legend.position = \"none\") \n    \n    #arrange the plots together, with appropriate height and width for each row and column\n    grid.arrange(plot_top, empty, scatter, plot_right, ncol = 2, nrow = 2, widths = c(4, 1), heights = c(1, 4))\n  \n\n    ######################0000000000000########################\n    \n#o# Répartition des régimes au niveau des trois stations les plus étudiées (Crique Chien, Crique Nouvelle-france et 3 Sauts)    \n    \n  ### Repartition des regimes pr chaque groupe de stations pour BDD_PME generale\n    p1 <- ggplot(BDD_PME, aes(Groupe_station)) +\n      geom_bar(aes(fill = Regime_alter), position = \"fill\")\n     # repartition des regimes pr chaque groupe de stations (sans prendre en compte le nb d'individus)\n    p2 <- ggplot(BDD_PME, aes(x = Groupe_station)) +\n      geom_bar(aes(fill = Regime_alter))\n     # repartition des regimes pr chaque groupe de stations (en prenant en compte le nb d'individus)\n    grid.arrange(p1, p2, ncol = 1, nrow = 2, widths = c(1, 1), heights = c(1, 1))\n    \n  ### Repartition des regimes pr chaque groupe de stations pour subset BDD_PME : uniquement les échantillons ayant des éléments traces dosés\n    p11 <- ggplot(sub_BDD_PME, aes(Groupe_station)) +\n      geom_bar(aes(fill = Regime_alter), position = \"fill\")\n     # repartition des regimes pr chaque groupe de stations (sans prendre en compte le nb d'individus)\n    p22 <- ggplot(sub_BDD_PME, aes(x = Groupe_station)) +\n      geom_bar(aes(fill = Regime_alter))\n     # repartition des regimes pr chaque groupe de stations (en prenant en compte le nb d'individus)\n    grid.arrange(p11, p22, ncol = 1, nrow = 2, widths = c(1, 1), heights = c(1, 1))\n    \n    \n    ######################0000000000000########################\n    \n#o# Répartition des régimes au niveau des trois stations les plus étudiées (Crique Chien, Crique Nouvelle-france et 3 Sauts)\n    \n  ### Repartition des regimes des échantillons ayant du Hg dosés dans les muscles sur chaque station de l'ensemble de la BDD\n    p10 <- ggplot(BDD.sansNA, aes(Code_Station)) +\n      geom_bar(aes(fill = Regime_alter), position = \"fill\") +\n      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) # graduations de l'axe x écrites verticalement\n     # repartition des regimes sur chaque station (sans prendre en compte le nb d'individus)\n    p20 <- ggplot(BDD.sansNA, aes(x = Code_Station)) +\n      geom_bar(aes(fill = Regime_alter)) +\n      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n     # repartition des regimes sur chaque station (en prenant en compte le nb d'individus)\n    grid.arrange(p10, p20, ncol = 1, nrow = 2, widths = c(1, 1), heights = c(1, 1))    \n    \n    \n    ######################0000000000000########################\n    \n    \n#o# Répartition des régimes en fonction des pressions anthropiques exercées sur les stations\n    \n  ### Repartition des regimes des échantillons ayant du Hg dosés dans les muscles sur chaque station de l'ensemble de la BDD\n    p10 <- ggplot(BDD.sansNA, aes(Pression_anthro)) +\n      geom_bar(aes(fill = Regime_alter), position = \"fill\") +\n      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) # graduations de l'axe x écrites verticalement\n    # repartition des regimes sur chaque station (sans prendre en compte le nb d'individus)\n    p20 <- ggplot(BDD.sansNA, aes(x = Pression_anthro)) +\n      geom_bar(aes(fill = Regime_alter)) +\n      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n    # repartition des regimes sur chaque station (en prenant en compte le nb d'individus)\n    grid.arrange(p10, p20, ncol = 1, nrow = 2, widths = c(1, 1), heights = c(1, 1))    \n    \n    \n    ######################0000000000000########################\n    \n#o# Ensemble de la BDD\n    \n  ### Impact des pressions anthropiques\n    \n    BD <- select(BDD.sansNA, conc_Hg_muscle_ppm, Pression_anthro, Regime_principal, Regime_alter, Genre) # Subset plus simple a  manipuler\n    \n    means.pression <- aggregate(conc_Hg_muscle_ppm ~  Pression_anthro, BD, mean)\n    means.pression$conc_Hg_muscle_ppm <- round(means.pression$conc_Hg_muscle_ppm, digits = 2)\n    \n    kruskal.test(conc_Hg_muscle_ppm ~ Pression_anthro, data = BD) # Il existe des differences significatives\n    \n    comparison <- kruskal(BD$conc_Hg_muscle_ppm, BD$Pression_anthro, alpha = 0.05, p.adj = \"holm\")\n    \n    posthoc <- comparison[['groups']]\n    posthoc$trt <- gsub(\" \",\"\",posthoc$trt) # Tous les espaces apres le nom doivent etre supprimes pour pouvoir merge par la suite\n    \n    \n    p0 <- ggplot(BD, aes(x = Pression_anthro , y = conc_Hg_muscle_ppm)) +\n      geom_boxplot() +\n      stat_summary(fun.y = mean, colour = \"darkred\", geom = \"point\", \n                   shape = 18, size = 3,show_guide = FALSE) + \n      geom_text(data = means.pression, aes(label = conc_Hg_muscle_ppm, y = conc_Hg_muscle_ppm + 0.08), color = \"blue\")\n    lettpos <- function(BD) boxplot(BD$conc_Hg_muscle_ppm, plot = FALSE)$stats[5,] # determination d'un emplacement > a  la \"moustache\" du boxplot\n    test <- ddply(BD, .(Pression_anthro), lettpos) # Obtention de cette information pour chaque facteur (ici, Date)\n    test_f <- merge(test, posthoc, by.x = \"Pression_anthro\", by.y = \"trt\") # Les 2 tableaux sont reunis par rapport aux valeurs row.names\n    colnames(test_f)[2] <- \"upper\"\n    colnames(test_f)[4] <- \"signif\"\n    test_f$signif <- as.character(test_f$signif) # au cas ou, pour que l'affichage se produise correctement. Pas forcement utile.\n    p0 <- p0 + geom_text(aes(Pression_anthro, upper + 0.1, label = signif), size = 10, data = test_f, vjust = -2, color = \"red\") +\n      scale_x_discrete(limits = c( \"Reference\", \"Agriculture\", \"Deforestation\", \"Piste\", \"Orpaillage_ancien\", \"Orpaillage_illegal\", \"Barrage\"),\n                       labels = c(\"Référence\", \"Agriculture\", \"Déforestation\", \"Piste\", \"Orpaillage ancien\",  \"Orpaillage illégal récent\", \"Barrage\")) +\n      labs( y = \"[Hg] dans les muscles de poissons, en mg/kg de poids sec\",\n            x = \"Pression anthropique\", title = \"[Hg] dans les muscles de poissons selon les pressions anthropiques exercées sur les stations\") +\n      geom_hline(aes(yintercept = 2.5), color = \"red\")\n    \n    \n    pdf(\"Graph/Pression_anthropique/Hg-muscle_pression-anthropique.pdf\", width = 12, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(p0)\n    dev.off()\n\n    \n    #0000000000000#\n  \n  ### Impact des pressions anthropiques sur les régimes principaux\n    \n    BD.carn <- BD[BD$Regime_principal %in% \"Carnivore\",]\n    BD.omni <- BD[BD$Regime_principal %in% \"Omnivore\",]\n    # BD.herbi <- BD[BD$Regime_principal %in% \"Herbivore\",] # Trop peu d'échantillons, qui plus est inégalement répartis\n    # BD.detri <- BD[BD$Regime_principal %in% \"Detritivore\",] # Uniquement 16 indiv donc pas assez de données\n    \n    # Carnivores\n    \n    means.pression <- aggregate(conc_Hg_muscle_ppm ~  Pression_anthro, BD.carn, mean)\n    means.pression$conc_Hg_muscle_ppm <- round(means.pression$conc_Hg_muscle_ppm, digits = 2)\n    \n    kruskal.test(conc_Hg_muscle_ppm ~ Pression_anthro, data = BD.carn) # Il existe des differences significatives\n    \n    comparison <- kruskal(BD.carn$conc_Hg_muscle_ppm, BD.carn$Pression_anthro, alpha = 0.05, p.adj = \"holm\")\n    \n    posthoc <- comparison[['groups']]\n    posthoc$trt <- gsub(\" \",\"\",posthoc$trt) # Tous les espaces apres le nom doivent etre supprimes pour pouvoir merge par la suite\n    \n    \n    p0 <- ggplot(BD.carn, aes(x = Pression_anthro , y = conc_Hg_muscle_ppm)) +\n      geom_boxplot() +\n      stat_summary(fun.y = mean, colour = \"darkred\", geom = \"point\", \n                   shape = 18, size = 3,show_guide = FALSE) + \n      geom_text(data = means.pression, aes(label = conc_Hg_muscle_ppm, y = conc_Hg_muscle_ppm + 0.08), color = \"blue\")\n    lettpos <- function(BD.carn) boxplot(BD.carn$conc_Hg_muscle_ppm, plot = FALSE)$stats[5,] # determination d'un emplacement > a  la \"moustache\" du boxplot\n    test <- ddply(BD.carn, .(Pression_anthro), lettpos) # Obtention de cette information pour chaque facteur (ici, Date)\n    test_f <- merge(test, posthoc, by.x = \"Pression_anthro\", by.y = \"trt\") # Les 2 tableaux sont reunis par rapport aux valeurs row.names\n    colnames(test_f)[2] <- \"upper\"\n    colnames(test_f)[4] <- \"signif\"\n    test_f$signif <- as.character(test_f$signif) # au cas ou, pour que l'affichage se produise correctement. Pas forcement utile.\n    p0 <- p0 + geom_text(aes(Pression_anthro, upper + 0.1, label = signif), size = 10, data = test_f, vjust = -2, color = \"red\") +\n      scale_x_discrete(limits = c( \"Reference\", \"Agriculture\", \"Deforestation\", \"Piste\", \"Orpaillage_ancien\", \"Orpaillage_illegal\", \"Barrage\"),\n                       labels = c(\"Référence\", \"Agriculture\", \"Déforestation\", \"Piste\", \"Orpaillage ancien\",  \"Orpaillage illégal récent\", \"Barrage\")) +\n      labs( y = \"[Hg] dans les muscles de poissons, en mg/kg de poids sec\",\n            x = \"Pression anthropique\", title = \"[Hg] dans les muscles de carnivores selon les pressions anthropiques exercées sur les stations\") +\n      geom_hline(aes(yintercept = 2.5), color = \"red\")\n    \n    \n    pdf(\"Graph/Pression_anthropique/Hg-muscle_pression-anthropique_carnivores.pdf\", width = 12, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(p0)\n    dev.off()\n    \n    \n    # Omnivores\n    \n    means.pression <- aggregate(conc_Hg_muscle_ppm ~  Pression_anthro, BD.omni, mean)\n    means.pression$conc_Hg_muscle_ppm <- round(means.pression$conc_Hg_muscle_ppm, digits = 2)\n    \n    kruskal.test(conc_Hg_muscle_ppm ~ Pression_anthro, data = BD.omni) # Il existe des differences significatives\n    \n    comparison <- kruskal(BD.omni$conc_Hg_muscle_ppm, BD.omni$Pression_anthro, alpha = 0.05, p.adj = \"holm\")\n    \n    posthoc <- comparison[['groups']]\n    posthoc$trt <- gsub(\" \",\"\",posthoc$trt) # Tous les espaces apres le nom doivent etre supprimes pour pouvoir merge par la suite\n    \n    \n    p0 <- ggplot(BD.omni, aes(x = Pression_anthro , y = conc_Hg_muscle_ppm)) +\n      geom_boxplot() +\n      stat_summary(fun.y = mean, colour = \"darkred\", geom = \"point\", \n                   shape = 18, size = 3,show_guide = FALSE) + \n      geom_text(data = means.pression, aes(label = conc_Hg_muscle_ppm, y = conc_Hg_muscle_ppm + 0.08), color = \"blue\")\n    lettpos <- function(BD.omni) boxplot(BD.omni$conc_Hg_muscle_ppm, plot = FALSE)$stats[5,] # determination d'un emplacement > a  la \"moustache\" du boxplot\n    test <- ddply(BD.omni, .(Pression_anthro), lettpos) # Obtention de cette information pour chaque facteur (ici, Date)\n    test_f <- merge(test, posthoc, by.x = \"Pression_anthro\", by.y = \"trt\") # Les 2 tableaux sont reunis par rapport aux valeurs row.names\n    colnames(test_f)[2] <- \"upper\"\n    colnames(test_f)[4] <- \"signif\"\n    test_f$signif <- as.character(test_f$signif) # au cas ou, pour que l'affichage se produise correctement. Pas forcement utile.\n    p0 <- p0 + geom_text(aes(Pression_anthro, upper + 0.1, label = signif), size = 10, data = test_f, vjust = -2, color = \"red\") +\n      scale_x_discrete(limits = c( \"Reference\", \"Agriculture\", \"Deforestation\", \"Piste\", \"Orpaillage_ancien\", \"Orpaillage_illegal\", \"Barrage\"),\n                       labels = c(\"Référence\", \"Agriculture\", \"Déforestation\", \"Piste\", \"Orpaillage ancien\",  \"Orpaillage illégal récent\", \"Barrage\")) +\n      labs( y = \"[Hg] dans les muscles de poissons, en mg/kg de poids sec\",\n            x = \"Pression anthropique\", title = \"[Hg] dans les muscles d'omnivores selon les pressions anthropiques exercées sur les stations\") +\n      geom_hline(aes(yintercept = 2.5), color = \"red\")\n    \n    \n    pdf(\"Graph/Pression_anthropique/Hg-muscle_pression-anthropique_omnivores.pdf\", width = 12, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(p0)\n    dev.off()\n    \n    \n    #0000000000000#\n    \n  ### Impact des pressions anthropiques sur les régimes détaillés\n    \n        \n    BD.omn.inver <- BD[BD$Regime_alter %in% \"Omnivore_Invertivore\",]\n    BD.car.inver <- BD[BD$Regime_alter %in% \"Carnivore_Invertivore\",]\n    BD.car.pisc <- BD[BD$Regime_alter %in% \"Carnivore_Piscivore\",]\n    # BD.car.insec <- BD[BD$Regime_alter %in% \"Carnivore_Insectivore\",] # pas de données partout\n\n    \n    # Omnivores Invertivores\n    \n    means.pression <- aggregate(conc_Hg_muscle_ppm ~  Pression_anthro, BD.omn.inver, mean)\n    means.pression$conc_Hg_muscle_ppm <- round(means.pression$conc_Hg_muscle_ppm, digits = 2)\n    \n    kruskal.test(conc_Hg_muscle_ppm ~ Pression_anthro, data = BD.omn.inver) # Il existe des differences significatives\n    \n    comparison <- kruskal(BD.omn.inver$conc_Hg_muscle_ppm, BD.omn.inver$Pression_anthro, alpha = 0.05, p.adj = \"holm\")\n    \n    posthoc <- comparison[['groups']]\n    posthoc$trt <- gsub(\" \",\"\",posthoc$trt) # Tous les espaces apres le nom doivent etre supprimes pour pouvoir merge par la suite\n    \n    \n    p0 <- ggplot(BD.omn.inver, aes(x = Pression_anthro , y = conc_Hg_muscle_ppm)) +\n      geom_boxplot() +\n      stat_summary(fun.y = mean, colour = \"darkred\", geom = \"point\", \n                   shape = 18, size = 3,show_guide = FALSE) + \n      geom_text(data = means.pression, aes(label = conc_Hg_muscle_ppm, y = conc_Hg_muscle_ppm + 0.08), color = \"blue\")\n    lettpos <- function(BD.omn.inver) boxplot(BD.omn.inver$conc_Hg_muscle_ppm, plot = FALSE)$stats[5,] # determination d'un emplacement > a  la \"moustache\" du boxplot\n    test <- ddply(BD.omn.inver, .(Pression_anthro), lettpos) # Obtention de cette information pour chaque facteur (ici, Date)\n    test_f <- merge(test, posthoc, by.x = \"Pression_anthro\", by.y = \"trt\") # Les 2 tableaux sont reunis par rapport aux valeurs row.names\n    colnames(test_f)[2] <- \"upper\"\n    colnames(test_f)[4] <- \"signif\"\n    test_f$signif <- as.character(test_f$signif) # au cas ou, pour que l'affichage se produise correctement. Pas forcement utile.\n    p0 <- p0 + geom_text(aes(Pression_anthro, upper + 0.1, label = signif), size = 10, data = test_f, vjust = -2, color = \"red\") +\n      scale_x_discrete(limits = c( \"Reference\", \"Agriculture\", \"Deforestation\", \"Piste\", \"Orpaillage_ancien\", \"Orpaillage_illegal\", \"Barrage\"),\n                       labels = c(\"Référence\", \"Agriculture\", \"Déforestation\", \"Piste\", \"Orpaillage ancien\",  \"Orpaillage illégal récent\", \"Barrage\")) +\n      labs( y = \"[Hg] dans les muscles de poissons, en mg/kg de poids sec\",\n            x = \"Pression anthropique\", title = \"[Hg] dans les muscles d'omnivores invertivores selon les pressions anthropiques exercées sur les stations\") +\n      geom_hline(aes(yintercept = 2.5), color = \"red\")\n    \n    \n    pdf(\"Graph/Pression_anthropique/Hg-muscle_pression-anthropique_omnivores-invertivores.pdf\", width = 12, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(p0)\n    dev.off()\n    \n    \n    # Carnivores Invertivores\n    \n    means.pression <- aggregate(conc_Hg_muscle_ppm ~  Pression_anthro, BD.car.inver, mean)\n    means.pression$conc_Hg_muscle_ppm <- round(means.pression$conc_Hg_muscle_ppm, digits = 2)\n    \n    kruskal.test(conc_Hg_muscle_ppm ~ Pression_anthro, data = BD.car.inver) # Il existe des differences significatives\n    \n    comparison <- kruskal(BD.car.inver$conc_Hg_muscle_ppm, BD.car.inver$Pression_anthro, alpha = 0.05, p.adj = \"holm\")\n    \n    posthoc <- comparison[['groups']]\n    posthoc$trt <- gsub(\" \",\"\",posthoc$trt) # Tous les espaces apres le nom doivent etre supprimes pour pouvoir merge par la suite\n    \n    \n    p0 <- ggplot(BD.car.inver, aes(x = Pression_anthro , y = conc_Hg_muscle_ppm)) +\n      geom_boxplot() +\n      stat_summary(fun.y = mean, colour = \"darkred\", geom = \"point\", \n                   shape = 18, size = 3,show_guide = FALSE) + \n      geom_text(data = means.pression, aes(label = conc_Hg_muscle_ppm, y = conc_Hg_muscle_ppm + 0.08), color = \"blue\")\n    lettpos <- function(BD.car.inver) boxplot(BD.car.inver$conc_Hg_muscle_ppm, plot = FALSE)$stats[5,] # determination d'un emplacement > a  la \"moustache\" du boxplot\n    test <- ddply(BD.car.inver, .(Pression_anthro), lettpos) # Obtention de cette information pour chaque facteur (ici, Date)\n    test_f <- merge(test, posthoc, by.x = \"Pression_anthro\", by.y = \"trt\") # Les 2 tableaux sont reunis par rapport aux valeurs row.names\n    colnames(test_f)[2] <- \"upper\"\n    colnames(test_f)[4] <- \"signif\"\n    test_f$signif <- as.character(test_f$signif) # au cas ou, pour que l'affichage se produise correctement. Pas forcement utile.\n    p0 <- p0 + geom_text(aes(Pression_anthro, upper + 0.1, label = signif), size = 10, data = test_f, vjust = -2, color = \"red\") +\n      scale_x_discrete(limits = c( \"Reference\", \"Agriculture\", \"Deforestation\", \"Piste\", \"Orpaillage_ancien\", \"Orpaillage_illegal\", \"Barrage\"),\n                       labels = c(\"Référence\", \"Agriculture\", \"Déforestation\", \"Piste\", \"Orpaillage ancien\",  \"Orpaillage illégal récent\", \"Barrage\")) +\n      labs( y = \"[Hg] dans les muscles de poissons, en mg/kg de poids sec\",\n            x = \"Pression anthropique\", title = \"[Hg] dans les muscles de carnivores invertivores selon les pressions anthropiques exercées sur les stations\") +\n      geom_hline(aes(yintercept = 2.5), color = \"red\")\n    \n    \n    pdf(\"Graph/Pression_anthropique/Hg-muscle_pression-anthropique_carnivores-invertivores.pdf\", width = 12, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(p0)\n    dev.off()\n    \n    # Carnivores Piscivores\n    \n    means.pression <- aggregate(conc_Hg_muscle_ppm ~  Pression_anthro, BD.car.pisc, mean)\n    means.pression$conc_Hg_muscle_ppm <- round(means.pression$conc_Hg_muscle_ppm, digits = 2)\n    \n    kruskal.test(conc_Hg_muscle_ppm ~ Pression_anthro, data = BD.car.pisc) # Il existe des differences significatives\n    \n    comparison <- kruskal(BD.car.pisc$conc_Hg_muscle_ppm, BD.car.pisc$Pression_anthro, alpha = 0.05, p.adj = \"holm\")\n    \n    posthoc <- comparison[['groups']]\n    posthoc$trt <- gsub(\" \",\"\",posthoc$trt) # Tous les espaces apres le nom doivent etre supprimes pour pouvoir merge par la suite\n    \n    \n    p0 <- ggplot(BD.car.pisc, aes(x = Pression_anthro , y = conc_Hg_muscle_ppm)) +\n      geom_boxplot() +\n      geom_hline(aes(yintercept = 2.5), color = \"red\") +\n      stat_summary(fun.y = mean, colour = \"darkred\", geom = \"point\", \n                   shape = 18, size = 3,show_guide = FALSE) + \n      geom_text(data = means.pression, aes(label = conc_Hg_muscle_ppm, y = conc_Hg_muscle_ppm + 0.15), color = \"blue\")\n    lettpos <- function(BD.car.pisc) boxplot(BD.car.pisc$conc_Hg_muscle_ppm, plot = FALSE)$stats[5,] # determination d'un emplacement > a  la \"moustache\" du boxplot\n    test <- ddply(BD.car.pisc, .(Pression_anthro), lettpos) # Obtention de cette information pour chaque facteur (ici, Date)\n    test_f <- merge(test, posthoc, by.x = \"Pression_anthro\", by.y = \"trt\") # Les 2 tableaux sont reunis par rapport aux valeurs row.names\n    colnames(test_f)[2] <- \"upper\"\n    colnames(test_f)[4] <- \"signif\"\n    test_f$signif <- as.character(test_f$signif) # au cas ou, pour que l'affichage se produise correctement. Pas forcement utile.\n    p0 <- p0 + geom_text(aes(Pression_anthro, upper - 0.5, label = signif), size = 10, data = test_f, vjust = -2, color = \"red\") +\n      scale_x_discrete(limits = c( \"Reference\", \"Agriculture\", \"Deforestation\", \"Piste\", \"Orpaillage_ancien\", \"Orpaillage_illegal\", \"Barrage\"),\n                       labels = c(\"Référence\", \"Agriculture\", \"Déforestation\", \"Piste\", \"Orpaillage ancien\",  \"Orpaillage illégal récent\", \"Barrage\")) +\n      labs( y = \"[Hg] dans les muscles de poissons, en mg/kg de poids sec\",\n            x = \"Pression anthropique\", title = \"[Hg] dans les muscles de carnivores piscivores selon les pressions anthropiques exercées sur les stations\")\n      \n    \n    \n    pdf(\"Graph/Pression_anthropique/Hg-muscle_pression-anthropique_carnivores-piscivores.pdf\", width = 12, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(p0)\n    dev.off()\n    \n\n    #0000000000000#\n    \n  ### Impact des pressions anthropiques chez Mohenkausia\n    \n    BD.moen <- BD[BD$Genre %in% \"Moenkhausia\",]\n    \n    means.pression <- aggregate(conc_Hg_muscle_ppm ~  Pression_anthro, BD.moen, mean)\n    means.pression$conc_Hg_muscle_ppm <- round(means.pression$conc_Hg_muscle_ppm, digits = 2)\n    \n    kruskal.test(conc_Hg_muscle_ppm ~ Pression_anthro, data = BD.moen) # Il existe des differences significatives\n    \n    comparison <- kruskal(BD.moen$conc_Hg_muscle_ppm, BD.moen$Pression_anthro, alpha = 0.05, p.adj = \"holm\")\n    \n    posthoc <- comparison[['groups']]\n    posthoc$trt <- gsub(\" \",\"\",posthoc$trt) # Tous les espaces apres le nom doivent etre supprimes pour pouvoir merge par la suite\n    \n    \n    p0 <- ggplot(BD.moen, aes(x = Pression_anthro , y = conc_Hg_muscle_ppm)) +\n      geom_boxplot() +\n      geom_hline(aes(yintercept = 2.5), color = \"red\") +\n      stat_summary(fun.y = mean, colour = \"darkred\", geom = \"point\", \n                   shape = 18, size = 3,show_guide = FALSE) + \n      geom_text(data = means.pression, aes(label = conc_Hg_muscle_ppm, y = conc_Hg_muscle_ppm + 0.15), color = \"blue\")\n    lettpos <- function(BD.moen) boxplot(BD.moen$conc_Hg_muscle_ppm, plot = FALSE)$stats[5,] # determination d'un emplacement > a  la \"moustache\" du boxplot\n    test <- ddply(BD.moen, .(Pression_anthro), lettpos) # Obtention de cette information pour chaque facteur (ici, Date)\n    test_f <- merge(test, posthoc, by.x = \"Pression_anthro\", by.y = \"trt\") # Les 2 tableaux sont reunis par rapport aux valeurs row.names\n    colnames(test_f)[2] <- \"upper\"\n    colnames(test_f)[4] <- \"signif\"\n    test_f$signif <- as.character(test_f$signif) # au cas ou, pour que l'affichage se produise correctement. Pas forcement utile.\n    p0 <- p0 + geom_text(aes(Pression_anthro, upper - 0.5, label = signif), size = 10, data = test_f, vjust = -2, color = \"red\") +\n      scale_x_discrete(limits = c( \"Reference\", \"Deforestation\", \"Piste\", \"Orpaillage_ancien\", \"Orpaillage_illegal\", \"Barrage\"),\n                       labels = c(\"Référence\",  \"Déforestation\", \"Piste\", \"Orpaillage ancien\",  \"Orpaillage illégal récent\", \"Barrage\")) +\n      labs( y = \"[Hg] dans les muscles de poissons, en mg/kg de poids sec\",\n            x = \"Pression anthropique\", title = \"[Hg] dans les muscles de Moenkhausia selon les pressions anthropiques exercées sur les stations\")\n    \n    \n    pdf(\"Graph/Pression_anthropique/Hg-muscle_pression-anthropique_moenkhausia.pdf\", width = 12, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(p0)\n    dev.off()\n    \n    \n    ######################0000000000000########################\n    \n    \n  ### Contamination en Hg selon régime alimentaire et d15N sur toute la BDD\n    \n    # [Hg] muscle\n    \n    pl1 <- ggplot(BDD[!(is.na(BDD$conc_Hg_muscle_ppm)), ], aes(x = d15N, y = conc_Hg_muscle_ppm)) +\n      # geom_point(data = df.sp.muscle, aes(x = d15N_mean, y = Hg_muscle_mean, fill = Code), show_guide = FALSE) +\n      geom_point(data = df.reg.org, aes(x = d15N_mean, y = Hg_muscle_mean, color = Regime_alter), size = 4) +\n      geom_text(data = df.reg.org, aes(x = d15N_mean, y = Hg_muscle_mean, color = Regime_alter, label = c(\"Piscivore\", \"Insectivore\", \"Carnivore Invertivore\", \"Carnivore\", \"Omnivore Invertivore\", \"Omnivore Herbivore\", \"Détritivore\", \"Périphytophage\", \"Herbivore\",\"Phyllophage\")), hjust=1.02, vjust=-1, size = 6.5) +\n      geom_errorbarh(data = df.reg.org, aes(xmin = d15N_mean + d15N_se, xmax = d15N_mean - d15N_se, y = Hg_muscle_mean, x = d15N_mean, colour = Regime_alter), height = .025) + \n      geom_errorbar(data = df.reg.org, aes(ymin = Hg_muscle_mean - Hg_muscle_se, ymax = Hg_muscle_mean + Hg_muscle_se, x = d15N_mean, y = Hg_muscle_mean, colour = Regime_alter), width = .05) +\n      scale_color_manual(name = \"Régime trophique\",\n                       labels = c(\"Carnivore Piscivore\", \"Carnivore Insectivore\", \"Carnivore Invertivore\", \"Carnivore\", \"Omnivore Invertivore\", \"Omnivore Herbivore\", \"Détritivore\", \"Herbivore Périphytophage\", \"Herbivore\",\"Herbivore Phyllophage\"), \n                       values = colo) +\n      ylab(\"[Hg] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(expression(paste(delta^{15},'N'))) +\n      ggtitle(expression(paste(\"[Hg] dans le muscle de poissons en fonction de \", delta^{15},\"N selon les régimes trophiques\")))\n    \n    pdf(\"Graph/Hg_isotopie/Hg-muscle_d15N_regime.pdf\", width = 12, height = 9)\n    print(pl1)    \n    dev.off()\n    \n    # [Hg] foie\n    \n    pl2 <- ggplot( BDD[!(is.na(BDD$conc_Hg_foie_ppm)), ], aes(x = d15N, y = conc_Hg_foie_ppm)) +\n      # geom_point(aes(color = Regime_alter), alpha = 0.65) +\n      geom_point(data = df.reg.org, aes(x = d15N_mean, y = Hg_foie_mean, color = Regime_alter), size = 4) +\n      geom_text(data = df.reg.org, aes(x = d15N_mean, y = Hg_foie_mean, color = Regime_alter, label = c(\"Piscivore\", \"Insectivore\", \"Carnivore Invertivore\", \"Carnivore\", \"Omnivore Invertivore\", \"Omnivore Herbivore\", \"Détritivore\", \"Périphytophage\", \"Herbivore\",\"Phyllophage\")), hjust=1.02, vjust=-1, size = 6.5) +\n      geom_errorbarh(data = df.reg.org, aes(xmin = d15N_mean + d15N_se, xmax = d15N_mean - d15N_se, y = Hg_foie_mean, x = d15N_mean, colour = Regime_alter), height = .05) + \n      geom_errorbar(data = df.reg.org, aes(ymin = Hg_foie_mean - Hg_foie_se, ymax = Hg_foie_mean + Hg_foie_se, x = d15N_mean, y = Hg_foie_mean, colour = Regime_alter), width = .05) +\n      scale_color_manual(name = \"Régime trophique\",\n                           labels = c(\"Carnivore Piscivore\", \"Carnivore Insectivore\", \"Carnivore Invertivore\", \"Carnivore\", \"Omnivore Invertivore\", \"Omnivore Herbivore\", \"Détritivore\", \"Herbivore Périphytophage\", \"Herbivore\",\"Herbivore Phyllophage\"),\n                         values = colo) +\n      ylab(\"[Hg] dans le foie de poissons, en mg/kg de poids sec\") +\n      xlab(expression(paste(delta^{15},'N'))) +\n      ggtitle(expression(paste(\"[Hg] dans le foie de poissons en fonction de \", delta^{15},\"N selon les régimes trophiques\")))\n    \n    pdf(\"Graph/Hg_isotopie/Hg-foie_d15N_regime.pdf\", width = 12, height = 9)\n    print(pl2)    \n    dev.off()  \n    \n    # [Hg] branchie\n    \n    pl3 <- ggplot( BDD[!(is.na(BDD$conc_Hg_branchie_ppm)), ], aes(x = d15N, y = conc_Hg_branchie_ppm)) +\n      #  geom_point(aes(color = Regime_alter), alpha = 0.65) +\n      geom_point(data = df.reg.org, aes(x = d15N_mean, y = Hg_branchie_mean, color = Regime_alter), size = 4) +\n      geom_text(data = df.reg.org, aes(x = d15N_mean, y = Hg_branchie_mean, color = Regime_alter, label = c(\"Piscivore\", \"Insectivore\", \"Carnivore Invertivore\", \"Carnivore\", \"Omnivore Invertivore\", \"Omnivore Herbivore\", \"Détritivore\", \"Périphytophage\", \"Herbivore\",\"Phyllophage\")), hjust=1.02, vjust=-1, size = 6.5) +\n      geom_errorbarh(data = df.reg.org, aes(xmin = d15N_mean + d15N_se, xmax = d15N_mean - d15N_se, y = Hg_branchie_mean, x = d15N_mean, colour = Regime_alter), height = .01) + \n      geom_errorbar(data = df.reg.org, aes(ymin = Hg_branchie_mean - Hg_branchie_se, ymax = Hg_branchie_mean + Hg_branchie_se, x = d15N_mean, y = Hg_branchie_mean, colour = Regime_alter), width = .05) +\n      scale_color_manual(name = \"Régime trophique\",\n                           labels = c(\"Carnivore Piscivore\", \"Carnivore Insectivore\", \"Carnivore Invertivore\", \"Carnivore\", \"Omnivore Invertivore\", \"Omnivore Herbivore\", \"Détritivore\", \"Herbivore Périphytophage\", \"Herbivore\",\"Herbivore Phyllophage\"),\n                         values = colo) +\n      ylab(\"[Hg] dans les branchies de poissons, en mg/kg de poids sec\") +\n      xlab(expression(paste(delta^{15},'N'))) +\n      ggtitle(expression(paste(\"[Hg] dans les branchies de poissons en fonction de \", delta^{15},\"N selon les régimes trophiques\")))\n   \n    \n    pdf(\"Graph/Hg_isotopie/Hg-branchies_d15N_regime.pdf\", width = 12, height = 9)\n    print(pl3)    \n    dev.off()\n    \n    \n    \n    # Association des graphiques\n    \n    ggplot(df, aes(x = Regime_alter, y = value, color = variable)) + geom_point() # Muscle = organe le plus concentré sauf chez Carnivores indéfinis\n    \n    \n    legend <- g_legend(pl1)\n    \n    grid.arrange(pl1, pl2, pl3, ncol = 1, nrow = 3) # Basic\n    \n    grid.arrange(arrangeGrob(pl1 + theme(legend.position=\"none\"),\n                             pl2 + theme(legend.position=\"none\"),\n                             pl3 + theme(legend.position=\"none\"),\n                             ncol = 1),\n                 legend, ncol = 2, nrow = 1, widths = c(9, 1), heights = c(1, 1))\n    \n \n    pdf(\"Graph/Hg_isotopie/Hg-d15N_regime.pdf\", width = 20, height = 15) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(grid.arrange(arrangeGrob(pl1 + theme(legend.position=\"none\"),\n                                   pl2 + theme(legend.position=\"none\"),\n                                   pl3 + theme(legend.position=\"none\"),\n                                   ncol = 1),\n                       legend, ncol = 2, nrow = 1, widths = c(9, 1), heights = c(1, 1)))\n    dev.off()\n    \n    \n    #0000000000000#\n    \n    ### Contamination en Hg selon régime alimentaire et d15N sur Chien, 3 sauts et Nouvelle France\n    \n    \n     # 3 Sauts : pas d'isotopie réalisée ; pas de graphique\n    \n    \n     # Crique Chien\n    \n    \n      ## Non contaminée\n    \n    pCnC <- ggplot(BDD_PME[!(is.na(BDD_PME$conc_Hg_muscle_ppm)), ], aes(x = d15N, y = conc_Hg_muscle_ppm)) +\n      # geom_point(data = df.sp.muscle, aes(x = d15N_mean, y = Hg_muscle_mean, fill = Code), show_guide = FALSE) +\n      geom_point(data = df.chien.nonconta, aes(x = d15N_mean, y = Hg_muscle_mean, color = Regime_alter), size = 4) +\n      geom_text(data = df.chien.nonconta, aes(x = d15N_mean, y = Hg_muscle_mean, color = Regime_alter, label = c(\"Piscivore\", \"Insectivore\", \"Carnivore Invertivore\", \"Charognard\", \"Omnivore Invertivore\", \"Détritivore\", \"Périphytophage\")), hjust= 0, vjust=-1, size = 6.5) +\n      geom_errorbarh(data = df.chien.nonconta, aes(xmin = d15N_mean + d15N_se, xmax = d15N_mean - d15N_se, y = Hg_muscle_mean, x = d15N_mean, colour = Regime_alter), height = .025) + \n      geom_errorbar(data = df.chien.nonconta, aes(ymin = Hg_muscle_mean - Hg_muscle_se, ymax = Hg_muscle_mean + Hg_muscle_se, x = d15N_mean, y = Hg_muscle_mean, colour = Regime_alter), width = .05) +\n      scale_color_manual(name = \"Régime trophique\",\n                           labels = c(\"Carnivore Piscivore\", \"Carnivore Insectivore\", \"Carnivore Invertivore\", \"Carnivore Charognard\", \"Omnivore Invertivore\", \"Détritivore\", \"Herbivore Périphytophage\"),\n                         values = c( \"#F8766D\", \"#D89000\", \"#A3A500\", \"#FF62BC\", \"#E76BF3\", \"#00B0F6\", \"#39B600\", \"#00BFC4\", \"#00BF7D\")) +\n      ylab(\"[Hg] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(expression(paste(delta^{15},'N'))) +\n      ggtitle(expression(paste(\"[Hg] dans le muscle des poissons de la zone non contaminée de Crique Chien en fonction de \", delta^{15},\"N selon les régimes trophiques\")))\n    \n    pdf(\"Graph/Hg_isotopie/Hg-muscle_d15N_regime_Chien-nonconta.pdf\", width = 16.5, height = 9)\n    print(pCnC)    \n    dev.off()\n    \n    # sort(table(BDD_PME[!(is.na(BDD_PME$conc_Hg_muscle_ppm)) & !(is.na(BDD_PME$d15N)) & BDD_PME$Groupe_station %in% \"Chien_non_conta\", ]$Regime_alter),decreasing=TRUE)\n    \n    \n    \n      ## Contaminée\n    \n    pCC <- ggplot(BDD_PME[!(is.na(BDD_PME$conc_Hg_muscle_ppm)), ], aes(x = d15N, y = conc_Hg_muscle_ppm)) +\n      # geom_point(data = df.sp.muscle, aes(x = d15N_mean, y = Hg_muscle_mean, fill = Code), show_guide = FALSE) +\n      geom_point(data = df.chien.conta, aes(x = d15N_mean, y = Hg_muscle_mean, color = Regime_alter), size = 4) +\n      geom_text(data = df.chien.conta, aes(x = d15N_mean, y = Hg_muscle_mean, color = Regime_alter, label = c(\"Piscivore\", \"Insectivore\", \"Carnivore Invertivore\", \"Carnivore\", \"Omnivore Invertivore\", \"Omnivore Herbivore\", \"Détritivore\", \"Périphytophage\")), hjust=1.02, vjust=-1, size = 6.5) +\n      geom_errorbarh(data = df.chien.conta, aes(xmin = d15N_mean + d15N_se, xmax = d15N_mean - d15N_se, y = Hg_muscle_mean, x = d15N_mean, colour = Regime_alter), height = .025) + \n      geom_errorbar(data = df.chien.conta, aes(ymin = Hg_muscle_mean - Hg_muscle_se, ymax = Hg_muscle_mean + Hg_muscle_se, x = d15N_mean, y = Hg_muscle_mean, colour = Regime_alter), width = .05) +\n      scale_color_manual(name = \"Régime trophique\",\n                           labels = c(\"Carnivore Piscivore\", \"Carnivore Insectivore\", \"Carnivore Invertivore\", \"Carnivore\", \"Omnivore Invertivore\", \"Omnivore Herbivore\", \"Détritivore\", \"Herbivore Périphytophage\"),\n                         values = c( \"#F8766D\", \"#D89000\", \"#A3A500\", \"#FF62BC\", \"#E76BF3\", \"#9590FF\", \"#00B0F6\", \"#39B600\", \"#00BFC4\", \"#00BF7D\")) +\n      ylab(\"[Hg] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(expression(paste(delta^{15},'N'))) +\n      ggtitle(expression(paste(\"[Hg] dans le muscle des poissons de la zone contaminée de Crique Chien en fonction de \", delta^{15},\"N selon les régimes trophiques\")))\n    \n    pdf(\"Graph/Hg_isotopie/Hg-muscle_d15N_regime_Chien-conta.pdf\", width = 13, height = 9)\n    print(pCC)    \n    dev.off()\n    \n   # sort(table(BDD_PME[!(is.na(BDD_PME$conc_Hg_muscle_ppm)) & !(is.na(BDD_PME$d15N)) & BDD_PME$Groupe_station %in% \"Chien_conta\", ]$Regime_alter),decreasing=TRUE)\n    \n    #0000000000000#\n    \n    # Crique Nouvelle France\n    \n    \n      ## Non Contaminée\n    \n    pNFnC <- ggplot(BDD_PME[!(is.na(BDD_PME$conc_Hg_muscle_ppm)), ], aes(x = d15N, y = conc_Hg_muscle_ppm)) +\n      # geom_point(data = df.sp.muscle, aes(x = d15N_mean, y = Hg_muscle_mean, fill = Code), show_guide = FALSE) +\n      geom_point(data = df.NF.nonconta, aes(x = d15N_mean, y = Hg_muscle_mean, color = Regime_alter), size = 4) +\n      geom_text(data = df.NF.nonconta, aes(x = d15N_mean, y = Hg_muscle_mean, color = Regime_alter, label = c(\"Piscivore\", \"Insectivore\", \"Carnivore Invertivore\", \"Scaliphage\", \"Charognard\", \"Omnivore Invertivore\",  \"Périphytophage\", \"Herbivore\",\"Phyllophage\")), hjust=1.02, vjust=-1, size = 6.5) +\n      geom_errorbarh(data = df.NF.nonconta, aes(xmin = d15N_mean + d15N_se, xmax = d15N_mean - d15N_se, y = Hg_muscle_mean, x = d15N_mean, colour = Regime_alter), height = .025) + \n      geom_errorbar(data = df.NF.nonconta, aes(ymin = Hg_muscle_mean - Hg_muscle_se, ymax = Hg_muscle_mean + Hg_muscle_se, x = d15N_mean, y = Hg_muscle_mean, colour = Regime_alter), width = .05) +\n      scale_color_manual(name = \"Régime trophique\",\n                           labels = c(\"Carnivore Piscivore\", \"Carnivore Insectivore\", \"Carnivore Invertivore\", \"Carnivore Scaliphage\", \"Carnivore Charognard\", \"Omnivore Invertivore\", \"Herbivore Périphytophage\", \"Herbivore\",\"Herbivore Phyllophage\"),\n                         values = c( \"#F8766D\", \"#D89000\", \"#A3A500\", \"#FF62BC\", \"#9590FF\", \"#E76BF3\", \"#39B600\", \"#00BFC4\", \"#00BF7D\")) +\n      ylab(\"[Hg] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(expression(paste(delta^{15},'N'))) +\n      ggtitle(expression(paste(\"[Hg] dans le muscle des poissons de la zone non contaminée de Crique Nouvelle France en fonction de \", delta^{15},\"N selon les régimes trophiques\")))\n    \n    pdf(\"Graph/Hg_isotopie/Hg-muscle_d15N_regime_NF-nonconta.pdf\", width = 14, height = 9)\n    print(pNFnC)    \n    dev.off()\n    \n    # sort(table(BDD_PME[!(is.na(BDD_PME$conc_Hg_muscle_ppm)) & !(is.na(BDD_PME$d15N)) & BDD_PME$Groupe_station %in% \"NF_non_conta\", ]$Regime_alter),decreasing=TRUE)\n    \n    \n    \n      ## Contaminée\n    \n    \n    pNFC <- ggplot(BDD_PME[!(is.na(BDD_PME$conc_Hg_muscle_ppm)), ], aes(x = d15N, y = conc_Hg_muscle_ppm)) +\n      # geom_point(data = df.sp.muscle, aes(x = d15N_mean, y = Hg_muscle_mean, fill = Code), show_guide = FALSE) +\n      geom_point(data = df.NF.conta, aes(x = d15N_mean, y = Hg_muscle_mean, color = Regime_alter), size = 4) +\n      geom_text(data = df.NF.conta, aes(x = d15N_mean, y = Hg_muscle_mean, color = Regime_alter, label = c(\"Piscivore\", \"Carnivore Invertivore\", \"Omnivore Invertivore\", \"Périphytophage\")), hjust= 0, vjust=-1, size = 6.5) +\n      geom_errorbarh(data = df.NF.conta, aes(xmin = d15N_mean + d15N_se, xmax = d15N_mean - d15N_se, y = Hg_muscle_mean, x = d15N_mean, colour = Regime_alter), height = .025) + \n      geom_errorbar(data = df.NF.conta, aes(ymin = Hg_muscle_mean - Hg_muscle_se, ymax = Hg_muscle_mean + Hg_muscle_se, x = d15N_mean, y = Hg_muscle_mean, colour = Regime_alter), width = .05) +\n      scale_color_manual(name = \"Régime trophique\",\n                           labels = c(\"Carnivore Piscivore\", \"Carnivore Invertivore\", \"Omnivore Invertivore\", \"Herbivore Périphytophage\"),\n                         values = c(\"#F8766D\", \"#A3A500\", \"#E76BF3\", \"#39B600\")) +\n      ylab(\"[Hg] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(expression(paste(delta^{15},'N'))) +\n      ggtitle(expression(paste(\"[Hg] dans le muscle des poissons de la zone contaminée de Crique Nouvelle France en fonction de \", delta^{15},\"N selon les régimes trophiques\")))\n    \n    pdf(\"Graph/Hg_isotopie/Hg-muscle_d15N_regime_NF-conta.pdf\", width = 13.8, height = 9)\n    print(pNFC)    \n    dev.off()\n    \n    # sort(table(BDD_PME[!(is.na(BDD_PME$conc_Hg_muscle_ppm)) & !(is.na(BDD_PME$d15N)) & BDD_PME$Groupe_station %in% \"NF_conta\", ]$Regime_alter),decreasing=TRUE)\n    \n    # Informations sur le nombre d'individus dans chaque condition\n    ggplot(BDD_PME[!(is.na(BDD_PME$conc_Hg_muscle_ppm)) & !(is.na(BDD_PME$d15N)),], aes(x = Regime_alter, y = conc_Hg_muscle_ppm)) +\n      geom_point(position=\"jitter\") + facet_wrap(~ Groupe_station)\n    \n    View(ftable(xtabs(~ Groupe_station + Regime_alter, data = BDD_PME[!(is.na(BDD_PME$conc_Hg_muscle_ppm)) & !(is.na(BDD_PME$d15N)),])))\n\n    ftable(xtabs(~ Groupe_station + Regime_principal, data = BDD_PME[!(is.na(BDD_PME$conc_Hg_muscle_ppm)) & !(is.na(BDD_PME$d15N)),]))\n\n    \n    ######################0000000000000########################\n    \n    \n    # Analyse des éléments traces : Camopi, Nouvelle france et 3 Sauts\n    \n    \n    # sub_BDD_PME\n    \n    \n    ### ACP\n    # As enlevé car il y a définitivement un problème avec les [c] initiales\n    # Ensuite, problème avec Se car aucun échantillon de Trois Sauts n'a de valeur\n    \n    df.trace.Se <- sub_BDD_PME[,c(53:57, 59:62)]\n    df.trace.sansSe <- sub_BDD_PME[,c(53:57, 60:62)]\n    \n    # en cas d'imputation, le Se se détache clairement. Mais vu qu'une hypothèse\n    # Aurait pu être un lien entre Se et Hg et que l'imputation ne peut pas en tenir compte, est ce vraiment pertinent de la réaliser ?\n    # Toutes données sans Se\n    res.pca <- PCA(df.trace.sansSe, scale.unit=TRUE)\n    nb <- estim_ncpPCA(df.trace.sansSe, ncp.min = 0, ncp.max = 5)\n    res.impute <- imputePCA(df.trace.sansSe, ncp = 2)\n    res.acp <- PCA (res.impute$completeObs)\n    \n       ## Matrice corrélation de l'ACP\n    \n    #mcor <- cor(res.impute$completeObs)\n    #res1 <- cor.mtest(res.impute$completeObs, 0.95)\n    \n    #corrplot(mcor, p.mat = res1[[1]], sig.level = 0.05)\n    #corrplot(mcor, p.mat = res1[[1]], sig.level = 0.05, insig = \"pch\", method=\"shade\", shade.col=NA, tl.col=\"black\", tl.srt=45,  addCoef.col=\"black\", addcolorlabel=\"no\", order=\"FPC\")\n    \n    \n       ##### Graph sur l'ensemble des sites\n    # Now extract variables\n    #\n    vPC1 <- res.pca$var$coord[,1]\n    vPC2 <- res.pca$var$coord[,2]\n    vlabs <- rownames(res.pca$var$coord)\n    vPCs <- data.frame(cbind(vPC1,vPC2))\n    rownames(vPCs) <- vlabs\n    colnames(vPCs) <- colnames(PCs)\n    #\n    # and plot them\n    #\n    pv <- ggplot() + theme(aspect.ratio=1) + theme_bw(base_size = 20) \n    # no data so there's nothing to plot\n    # put a faint circle there, as is customary\n    angle <- seq(-pi, pi, length = 50) \n    df <- data.frame(x = sin(angle), y = cos(angle)) \n    pv <- pv + geom_path(aes(x, y), data = df, colour=\"grey70\") \n    #\n    # add on arrows and variable labels\n    pv <- pv + geom_text(data=vPCs, aes(x=vPC1,y=vPC2,label= c(\"Cr\", \"Co\", \"Ni\", \"Cu\", \"Zn\", \"Cd\", \"Pb\", \"Hg\")), size=6) +\n      xlab(\"Composante principale 1. 18,4% de variance expliquée\") + ylab(\"Composante principale 2. 16,3% de variance expliquée\") +\n      ggtitle(\"ACP sur les éléments traces : ensemble des sites\") +\n      geom_hline(yintercept = 0, colour = \"gray65\") +\n      geom_vline(xintercept = 0, colour = \"gray65\")\n    \n    pv <- pv + geom_segment(data=vPCs, aes(x = 0, y = 0, xend = vPC1*0.9, yend = vPC2*0.9), arrow = arrow(length = unit(1/2, 'picas')), color = \"grey30\")\n    \n    \n   \n    pdf(\"Graph/Elements_traces/PCA_ts-sites.pdf\", width = 10, height = 10) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(pv)\n    dev.off()\n    \n    \n    # res.MI <- MIPCA(df.elt.trace, scale = TRUE, ncp = 2)\n    # plot(res.MI) # problème de mémoire ?\n    \n    # Données sans 3 Sauts mais avec Se\n    df <- sub_BDD_PME[,c(53:57, 59:62)]\n    df.sans3sauts <- df[!(is.na(df[,'Se_ppm'])),]\n    res.impute <- imputePCA(df.sans3sauts, ncp = 2)\n    res.acp <- PCA(df.sans3sauts)\n    \n        ## Matrice corrélation de l'ACP\n    \n   # mcor <- cor(res.impute$completeObs)\n   # res1 <- cor.mtest(res.impute$completeObs, 0.95)\n    \n    # corrplot(mcor, p.mat = res1[[1]], sig.level = 0.05)\n    # corrplot(mcor, p.mat = res1[[1]], sig.level = 0.05, insig = \"pch\", method=\"shade\", shade.col=NA, tl.col=\"black\", tl.srt=45, addCoef.col=\"black\", addcolorlabel=\"no\", order=\"FPC\")\n\n    \n    \n   \n    # Now extract variables\n    #\n    vPC1 <- res.acp$var$coord[,1]\n    vPC2 <- res.acp$var$coord[,2]\n    vlabs <- rownames(res.acp$var$coord)\n    vPCs <- data.frame(cbind(vPC1,vPC2))\n    rownames(vPCs) <- vlabs\n    colnames(vPCs) <- colnames(PCs)\n    #\n    # and plot them\n    #\n    pv <- ggplot() + theme(aspect.ratio=1) + theme_bw(base_size = 20) \n    # no data so there's nothing to plot\n    # put a faint circle there, as is customary\n    angle <- seq(-pi, pi, length = 50) \n    df <- data.frame(x = sin(angle), y = cos(angle)) \n    pv <- pv + geom_path(aes(x, y), data = df, colour=\"grey70\") \n    #\n    # add on arrows and variable labels\n    pv <- pv + geom_text(data=vPCs, aes(x=vPC1,y=vPC2,label= c(\"Cr\", \"Co\", \"Ni\", \"Cu\", \"Zn\", \"Se\", \"Cd\", \"Pb\", \"Hg\")), size=6) +\n      xlab(\"Composante principale 1. 19,5% de variance expliquée\") + ylab(\"Composante principale 2. 16,1% de variance expliquée\") +\n      ggtitle(\"ACP sur les éléments traces : Camopi et Saül\") +\n      geom_hline(yintercept = 0, colour = \"gray65\") +\n      geom_vline(xintercept = 0, colour = \"gray65\")\n      \n    pv <- pv + geom_segment(data=vPCs, aes(x = 0, y = 0, xend = vPC1*0.9, yend = vPC2*0.9), arrow = arrow(length = unit(1/2, 'picas')), color = \"grey30\")\n    \n    \n    pdf(\"Graph/Elements_traces/PCA_Saul-Camopi.pdf\", width = 10, height = 10) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(pv)\n    dev.off()\n    \n    \n    \n    #0000000000000#\n    \n    ## Se\n    \n#   ggplot(sub_BDD_PME2, aes(x = Groupe_station, y = Se_ppm, color = Regime_principal)) +\n#      geom_boxplot() +\n#      scale_x_discrete(limits = c(\"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n#                       labels = c(\"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n#      scale_color_discrete(name = \"Régime trophique\", \n#                           labels = c(\"Carnivore\", \"Omnivore\", \"Herbivore\")) +\n#      ylab(\"[Se] dans le muscle de poissons, en mg/kg de poids sec\") +\n#      xlab(\"Groupe de stations\") +\n#      ggtitle(expression(paste(\"[Se] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    \n    Se <- ggplot(sub_BDD_PME4, aes(x = Groupe_station, y = Se_ppm, color = Regime_alter)) +\n      geom_boxplot() +\n      scale_x_discrete(limits = c(\"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n                       labels = c(\"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n      scale_color_manual(name = \"Régime trophique\", labels = c(\"Carnivore Piscivore\", \"Carnivore Invertivore\", \"Omnivore\", \"Herbivore\"), values = color) +\n      ylab(\"[Se] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(\"Groupe de stations\") +\n      ggtitle(expression(paste(\"[Se] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    pdf(\"Graph/Elements_traces/Se.pdf\", width = 12, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(Se)\n    dev.off()\n    \n    \n    \n    dcast(sub_BDD_PME4, Groupe_station ~ Regime_alter, length)\n    \n    ## Ni\n    \n#   ggplot(sub_BDD_PME, aes(x = Groupe_station, y = Ni_ppm, color = Regime_principal)) +\n#      geom_boxplot() +\n#      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n#                       labels = c(\"Trois Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n#      scale_color_discrete(name = \"Régime trophique\",\n#                           labels = c(\"Carnivore\", \"Omnivore\", \"Détritivore\", \"Herbivore\")) +\n#      ylab(\"[Ni] dans le muscle de poissons, en mg/kg de poids sec\") +\n#      xlab(\"Groupe de stations\") +\n#      ggtitle(expression(paste(\"[Ni] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    \n    Ni <-   ggplot(sub_BDD_PME4, aes(x = Groupe_station, y = Ni_ppm, color = Regime_alter)) +\n      geom_boxplot() +\n      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n                       labels = c(\"Trois_Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n      scale_color_manual(name = \"Régime trophique\", labels = c(\"Carnivore Piscivore\", \"Carnivore Invertivore\", \"Omnivore\", \"Herbivore\"), values = color) +\n      ylab(\"[Ni] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(\"Groupe de stations\") +\n      ggtitle(expression(paste(\"[Ni] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n  \n    \n    pdf(\"Graph/Elements_traces/Ni.pdf\", width = 13, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(Ni)\n    dev.off()\n    \n      \n    \n      ### MCA sur Ni\n         \n    Bd <- select(sub_BDD_PME4, Groupe_station, Regime_alter, Ni_ppm)\n    \n    elt.trace('Ni_ppm') \n    \n    MCA_Ni <- p + ggtitle(\"Analyse des correspondances multiples : Ni\") +\n      xlab(\"Dimension 1. 17,3 % de variance expliquée\") +\n      ylab(\"Dimension 2. 14,8 % de variance expliquée\") +\n      scale_colour_discrete(name = \"Variable\", label = c(\"Intervalle [Ni] en mg/kg ps\", \"Groupe de stations\", \"Régime trophique\"))\n    #+ geom_text(label = c (\"Chien contaminée\", \"Chien non contaminée\", \"NF contaminée\", \"NF non contaminée\", \"Trois Sauts\", \"Carnivore Piscivore\", \"Carnivore Invertivore\", rownames(mca1_vars_df[8:14, ])))\n    \n    \n    pdf(\"Graph/Elements_traces/MCA_Ni.pdf\", width = 14, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(MCA_Ni)\n    dev.off()\n    \n    \n    ## Cu\n    \n#    ggplot(sub_BDD_PME, aes(x = Groupe_station, y = Cu_ppm, color = Regime_principal)) +\n#      geom_boxplot() +\n#      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n#                       labels = c(\"Trois Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n#      scale_color_discrete(name = \"Régime trophique\",\n#                           labels = c(\"Carnivore\", \"Omnivore\", \"Détritivore\", \"Herbivore\")) +\n#      ylab(\"[Cu] dans le muscle de poissons, en mg/kg de poids sec\") +\n#      xlab(\"Groupe de stations\") +\n#      ggtitle(expression(paste(\"[Cu] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n      \n      \n    \n    Cu <-  ggplot(sub_BDD_PME4, aes(x = Groupe_station, y = Cu_ppm, color = Regime_alter)) +\n      geom_boxplot() +\n      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n                       labels = c(\"Trois_Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n      scale_color_manual(name = \"Régime trophique\", labels = c(\"Carnivore Piscivore\", \"Carnivore Invertivore\", \"Omnivore\", \"Herbivore\"), values = color) +\n      ylab(\"[Cu] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(\"Groupe de stations\") +\n      ggtitle(expression(paste(\"[Cu] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    pdf(\"Graph/Elements_traces/Cu.pdf\", width = 13, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(Cu)\n    dev.off()    \n    \n    \n    \n      ## MCA\n    \n    \n    Bd <- select(sub_BDD_PME4, Groupe_station, Regime_alter, Cu_ppm)\n        \n    elt.trace('Cu_ppm') \n    \n    MCA_Cu <- p + ggtitle(\"Analyse des correspondances multiples : Cu\") +\n      xlab(\"Dimension 1. 16,3 % de variance expliquée\") +\n      ylab(\"Dimension 2. 15,6 % de variance expliquée\") +\n      scale_colour_discrete(name = \"Variable\", label = c(\"Intervalle [Cu] en mg/kg ps\", \"Groupe de stations\", \"Régime trophique\"))\n    #+ geom_text(label = c (\"Chien contaminée\", \"Chien non contaminée\", \"NF contaminée\", \"NF non contaminée\", \"Trois Sauts\", \"Carnivore Piscivore\", \"Carnivore Invertivore\", rownames(mca1_vars_df[8:14, ])))\n    \n    \n    pdf(\"Graph/Elements_traces/MCA_Cu.pdf\", width = 14, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(MCA_Cu)\n    dev.off()\n    \n    \n    \n    ## Zn\n    \n#   ggplot(sub_BDD_PME, aes(x = Groupe_station, y = Zn_ppm, color = Regime_principal)) +\n#      geom_boxplot() +\n#      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n#                       labels = c(\"Trois Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n#      scale_color_discrete(name = \"Régime trophique\",\n#                           labels = c(\"Carnivore\", \"Omnivore\", \"Détritivore\", \"Herbivore\")) +\n#      ylab(\"[Zn] dans le muscle de poissons, en mg/kg de poids sec\") +\n#      xlab(\"Groupe de stations\") +\n#      ggtitle(expression(paste(\"[Zn] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n      \n    \n    Zn <- ggplot(sub_BDD_PME4, aes(x = Groupe_station, y = Zn_ppm, color = Regime_alter)) +\n      geom_boxplot() +\n      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n                       labels = c(\"Trois_Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n      scale_color_manual(name = \"Régime trophique\", labels = c(\"Carnivore Piscivore\", \"Carnivore Invertivore\", \"Omnivore\", \"Herbivore\"), values = color) +\n      ylab(\"[Zn] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(\"Groupe de stations\") +\n      ggtitle(expression(paste(\"[Zn] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    pdf(\"Graph/Elements_traces/Zn.pdf\", width = 13, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(Zn)\n    dev.off()    \n    \n    \n       ## MCA\n    \n    \n    Bd <- select(sub_BDD_PME4, Groupe_station, Regime_alter, Zn_ppm)\n        \n    elt.trace('Zn_ppm') \n    \n    MCA_Zn <- p + ggtitle(\"Analyse des correspondances multiples : Zn\") +\n      xlab(\"Dimension 1. 13,6 % de variance expliquée\") +\n      ylab(\"Dimension 2. 12 % de variance expliquée\") +\n      scale_colour_discrete(name = \"Variable\", label = c(\"Intervalle [Zn] en mg/kg ps\", \"Groupe de stations\", \"Régime trophique\"))\n    \n    \n    pdf(\"Graph/Elements_traces/MCA_Zn.pdf\", width = 14, height = 9)\n    print(MCA_Zn)\n    dev.off()\n    \n    \n    ########\n    \n    Bd$elt_qual <- quantcut(Bd[,'Zn_ppm'], q = seq(0, 1, by = 0.2))\n    Bd$elt_qual <- as.factor(Bd$elt_qual)\n    Bd2 <- Bd[,- 3]\n    \n    \n    # cats <- NULL\n    cats <- apply(Bd2, 2, function(x) nlevels(as.factor(x)))\n    \n    mca1 <- MCA(Bd2)\n    \n    #mca1_vars_df <- NULL\n    mca1_vars_df <<- data.frame(mca1$var$coord, Variable = rep(names(cats), cats))\n    \n    # data frame with observation coordinates\n    # mca1_obs_df <- NULL\n    mca1_obs_df <<- data.frame(mca1$ind$coord)\n    \n    # MCA plot of observations and categories\n    ggplot(data = mca1_obs_df, aes(x = Dim.1, y = Dim.2)) +\n      geom_hline(yintercept = 0, colour = \"gray70\") +\n      geom_vline(xintercept = 0, colour = \"gray70\") +\n      geom_point(colour = \"gray50\", alpha = 0.7) +\n      geom_density2d(colour = \"gray80\") +\n      geom_text(data = mca1_vars_df, \n                aes(x = Dim.1, y = Dim.2, \n                    label = rownames(mca1_vars_df), colour = Variable)) +\n      scale_colour_discrete(name = \"Variable\")\n    \n    \n    \n        # Clustering on principal components\n    \n  \n    #http://factominer.free.fr/classical-methods/hierarchical-clustering-on-principal-components.html\n  \n    # Pb actuel : ne prend pas en compte le vrai jeu de données\n    \n    res.hcpc <- HCPC(mca1, method = \"ward.D2\") # Création des groupes automatique, si besoin précision ac argument nb.clust\n    \n    res.hcpc$desc.var$test.chi2 # Variables qui caractérisent le mieux la séparation entre les groupes\n    res.hcpc$desc.var$category # Pr chq cluster, informations sur sa composition\n    res.hcpc$desc.ind # indiv caractéristiques de chaque groupe & indiv de chq les plus éloignés des autres groupes\n    \n    # Comment faire apparaître les cluster sur le graphe ?\n  \n    \n    \n    ## As\n    \n   As <- ggplot(sub_BDD_PME4, aes(x = Groupe_station, y = As_ppm, color = Regime_alter)) +\n      geom_boxplot() +\n      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n                       labels = c(\"Trois_Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n      scale_color_manual(name = \"Régime trophique\", labels = c(\"Carnivore Piscivore\", \"Carnivore Invertivore\", \"Omnivore\", \"Herbivore\"), values = color) +\n      ylab(\"[As] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(\"Groupe de stations\") +\n      ggtitle(expression(paste(\"[As] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    pdf(\"Graph/Elements_traces/As.pdf\", width = 13, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(As)\n    dev.off()    \n    \n    \n    ## Co\n    \n#    ggplot(sub_BDD_PME, aes(x = Groupe_station, y = Co_ppm, color = Regime_principal)) +\n#      geom_boxplot() +\n#      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n#                       labels = c(\"Trois Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n#      scale_color_discrete(name = \"Régime trophique\",\n#                           labels = c(\"Carnivore\", \"Omnivore\", \"Détritivore\", \"Herbivore\")) +\n#      ylab(\"[Co] dans le muscle de poissons, en mg/kg de poids sec\") +\n#      xlab(\"Groupe de stations\") +\n#      ggtitle(expression(paste(\"[Co] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    \n    Co <- ggplot(sub_BDD_PME4, aes(x = Groupe_station, y = Co_ppm, color = Regime_alter)) +\n      geom_boxplot() +\n      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n                       labels = c(\"Trois_Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n      scale_color_manual(name = \"Régime trophique\", labels = c(\"Carnivore Piscivore\", \"Carnivore Invertivore\", \"Omnivore\", \"Herbivore\"), values = color) +\n      ylab(\"[Co] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(\"Groupe de stations\") +\n      ggtitle(expression(paste(\"[Co] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    pdf(\"Graph/Elements_traces/Co.pdf\", width = 13, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(Co)\n    dev.off()    \n    \n    \n       ## MCA\n    \n    \n    Bd <- select(sub_BDD_PME4, Groupe_station, Regime_alter, Co_ppm)\n    \n    elt.trace('Co_ppm') \n    \n    MCA_Co <- p + ggtitle(\"Analyse des correspondances multiples : Co\") +\n      xlab(\"Dimension 1. 16,9 % de variance expliquée\") +\n      ylab(\"Dimension 2. 14,1 % de variance expliquée\") +\n      scale_colour_discrete(name = \"Variable\", label = c(\"Intervalle [Co] en mg/kg ps\", \"Groupe de stations\", \"Régime trophique\"))\n    \n    \n    pdf(\"Graph/Elements_traces/MCA_Co.pdf\", width = 20, height = 9)\n    print(MCA_Co)\n    dev.off()\n    \n    ## Cd\n    \n#   ggplot(sub_BDD_PME, aes(x = Groupe_station, y = Cd_ppm, color = Regime_principal)) +\n#      geom_boxplot() + geom_hline(aes(yintercept = 0.5)) +\n#      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n#                       labels = c(\"Trois Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n#      scale_color_discrete(name = \"Régime trophique\",\n#                           labels = c(\"Carnivore\", \"Omnivore\", \"Détritivore\", \"Herbivore\")) +\n#      ylab(\"[Cd] dans le muscle de poissons, en mg/kg de poids sec\") +\n#      xlab(\"Groupe de stations\") +\n#      ggtitle(expression(paste(\"[Cd] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    \n    Cd <- ggplot(sub_BDD_PME4, aes(x = Groupe_station, y = Cd_ppm, color = Regime_alter)) +\n      geom_boxplot() + geom_hline(aes(yintercept = 0.5))  +\n      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n                       labels = c(\"Trois_Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n      scale_color_manual(name = \"Régime trophique\", labels = c(\"Carnivore Piscivore\", \"Carnivore Invertivore\", \"Omnivore\", \"Herbivore\"), values = color) +\n      ylab(\"[Cd] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(\"Groupe de stations\") +\n      ggtitle(expression(paste(\"[Cd] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    pdf(\"Graph/Elements_traces/Cd.pdf\", width = 13, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(Cd)\n    dev.off()    \n    \n    \n       ## MCA\n    \n    # Aucun intérêt ici, pas de conta\n    \n    #Bd <- select(sub_BDD_PME4, Groupe_station, Regime_alter, Cd_ppm)\n    \n    #elt.trace('Cd_ppm') + ggtitle(\"MCA plot of Cd\")    \n    \n    \n    \n    ## Pb\n    \n#   ggplot(sub_BDD_PME, aes(x = Groupe_station, y = Pb_ppm, color = Regime_principal)) +\n#      geom_boxplot() + geom_hline(aes(yintercept = 1.5)) +\n#      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n#                       labels = c(\"Trois Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n#      scale_color_discrete(name = \"Régime trophique\",\n#                           labels = c(\"Carnivore\", \"Omnivore\", \"Détritivore\", \"Herbivore\")) +\n#      ylab(\"[Pb] dans le muscle de poissons, en mg/kg de poids sec\") +\n#      xlab(\"Groupe de stations\") +\n#      ggtitle(expression(paste(\"[Pb] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    \n    Pb <- ggplot(sub_BDD_PME4, aes(x = Groupe_station, y = Pb_ppm, color = Regime_alter)) +\n      geom_boxplot() + geom_hline(aes(yintercept = 2.5))  +\n      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n                       labels = c(\"Trois_Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n      scale_color_manual(name = \"Régime trophique\", labels = c(\"Carnivore Piscivore\", \"Carnivore Invertivore\", \"Omnivore\", \"Herbivore\"), values = color) +\n      ylab(\"[Pb] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(\"Groupe de stations\") +\n      ggtitle(expression(paste(\"[Pb] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    pdf(\"Graph/Elements_traces/Pb.pdf\", width = 13, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(Pb)\n    dev.off()    \n    \n       ## MCA\n    \n    \n    Bd <- select(sub_BDD_PME4, Groupe_station, Regime_alter, Pb_ppm)\n    \n    elt.trace('Pb_ppm') \n    \n    MCA_Pb <- p + ggtitle(\"Analyse des correspondances multiples : Pb\") +\n      xlab(\"Dimension 1. 17,3 % de variance expliquée\") +\n      ylab(\"Dimension 2. 15,5 % de variance expliquée\") +\n      scale_colour_discrete(name = \"Variable\", label = c(\"Intervalle [Pb] en mg/kg ps\", \"Groupe de stations\", \"Régime trophique\"))\n    \n    \n    pdf(\"Graph/Elements_traces/MCA_Pb.pdf\", width = 14, height = 9)\n    print(MCA_Pb)\n    dev.off()\n    \n    ## Cr\n    \n    \n#   ggplot(sub_BDD_PME, aes(x = Groupe_station, y = Cr_ppm, color = Regime_principal)) +\n#      geom_boxplot() +\n#      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n#                       labels = c(\"Trois Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n#      scale_color_discrete(name = \"Régime trophique\",\n#                           labels = c(\"Carnivore\", \"Omnivore\", \"Détritivore\", \"Herbivore\")) +\n#      ylab(\"[Cr] dans le muscle de poissons, en mg/kg de poids sec\") +\n#      xlab(\"Groupe de stations\") +\n#      ggtitle(expression(paste(\"[Cr] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    \n    Cr <- ggplot(sub_BDD_PME4, aes(x = Groupe_station, y = Cr_ppm, color = Regime_alter)) +\n      geom_boxplot()+\n      scale_x_discrete(limits = c(\"Trois_Sauts\", \"Chien_non_conta\", \"Chien_conta\", \"NF_non_conta\", \"NF_conta\"),\n                       labels = c(\"Trois_Sauts\", \"Chien non contaminée\", \"Chien contaminée\", \"Nouvelle France non contaminée\", \"Nouvelle France contaminée\")) +\n      scale_color_manual(name = \"Régime trophique\", labels = c(\"Carnivore Piscivore\", \"Carnivore Invertivore\", \"Omnivore\", \"Herbivore\"), values = color) +\n      ylab(\"[Cr] dans le muscle de poissons, en mg/kg de poids sec\") +\n      xlab(\"Groupe de stations\") +\n      ggtitle(expression(paste(\"[Cr] dans le muscle de poissons en fonction des groupes de stations et des régimes trophiques\")))\n    \n    pdf(\"Graph/Elements_traces/Cr.pdf\", width = 13, height = 9) # la fction pdf enregistre directement ds le dossier et sous format pdf\n    print(Cr)\n    dev.off()    \n    \n        ## MCA\n    \n    \n    Bd <- select(sub_BDD_PME4, Groupe_station, Regime_alter, Cr_ppm)\n    \n    elt.trace('Cr_ppm') \n    \n    \n    MCA_Cr <- p + ggtitle(\"Analyse des correspondances multiples : Cr\") +\n      xlab(\"Dimension 1. 16,3 % de variance expliquée\") +\n      ylab(\"Dimension 2. 11,5 % de variance expliquée\") +\n      scale_colour_discrete(name = \"Variable\", label = c(\"Intervalle [Cr] en mg/kg ps\", \"Groupe de stations\", \"Régime trophique\"))\n    \n    \n    pdf(\"Graph/Elements_traces/MCA_Cr.pdf\", width = 20, height = 10)\n    print(MCA_Cr)\n    dev.off()\n    \n    \n    ### MCA sur Hg\n    \n    Bd <- na.omit(select(sub_BDD_PME4, Groupe_station, Regime_alter, Hg_ppm))\n    \n    elt.trace('Hg_ppm') + ggtitle(\"MCA plot of Hg\")\n    ",
    "created" : 1399732216357.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3150850767",
    "id" : "23750511",
    "lastKnownWriteTime" : 1399216214,
    "path" : "~/R/R_Hg_PME/Script_final_PME.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}